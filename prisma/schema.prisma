generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model User {
  id        String   @id @default(uuid())
  name      String   @db.VarChar(150)
  username  String   @unique @db.VarChar(50)
  email     String   @unique @db.VarChar(190)
  phone     String   @db.VarChar(20)
  password  String   @db.VarChar(190)
  active    Boolean  @default(true)
  isRoot    Boolean  @default(false)
  role      Role     @default(LEVEL_1)
  petshopId String?  @db.VarChar(50)
  petshop   Petshop? @relation(fields: [petshopId], references: [id], onDelete: SetNull, onUpdate: Cascade)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Customer {
  id        String    @id @default(uuid())
  name      String    @db.VarChar(150)
  email     String    @unique @db.VarChar(190)
  phone     String    @db.VarChar(20)
  petshopId String    @db.VarChar(50)
  petshop   Petshop   @relation(fields: [petshopId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  addresses Address[]
  pets      Pet[]
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
}

model Petshop {
  id            String      @id @default(uuid())
  name          String      @db.VarChar(150)
  corporateName String      @db.VarChar(150)
  cnpjCpf       String      @db.VarChar(20)
  image         String?     @db.VarChar(190)
  active        Boolean     @default(true)
  users         User[]
  categories    Category[]
  products      Product[]
  attributes    Attribute[]
  customers     Customer[]
  services      Service[]
  addresses     Address[]
  pets          Pet[]
  breeds        Breed[]
  employees     Employee[]
  positions     Position[]
  species       Specie[]
  schedules     Schedule[]
  createdAt     DateTime    @default(now())
  updatedAt     DateTime    @updatedAt
}

model Employee {
  id         String     @id @default(uuid())
  name       String     @db.VarChar(150)
  image      String?    @db.VarChar(190)
  phone      String?    @db.VarChar(20)
  active     Boolean    @default(true)
  petshopId  String     @db.VarChar(50)
  positionId String?    @db.VarChar(50)
  schedules  Schedule[]
  petshop    Petshop    @relation(fields: [petshopId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  position   Position?  @relation(fields: [positionId], references: [id], onDelete: SetNull, onUpdate: Cascade)
  createdAt  DateTime   @default(now())
  updatedAt  DateTime   @updatedAt
}

model Position {
  id        String     @id @default(uuid())
  name      String     @db.VarChar(50)
  petshopId String     @db.VarChar(50)
  petshop   Petshop    @relation(fields: [petshopId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  employees Employee[]
  createdAt DateTime   @default(now())
  updatedAt DateTime   @updatedAt
}

model Service {
  id          String   @id @default(uuid())
  name        String   @db.VarChar(50)
  description String   @db.VarChar(200)
  amount      Decimal  @db.Decimal(10, 2)
  image       String?  @db.VarChar(190)
  petshopId   String   @db.VarChar(50)
  petshop     Petshop  @relation(fields: [petshopId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}

model Category {
  id        String             @id @default(uuid())
  name      String             @db.VarChar(150)
  image     String?            @db.VarChar(190)
  petshopId String             @db.VarChar(50)
  petshop   Petshop            @relation(fields: [petshopId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  products  Category_Product[]
  createdAt DateTime           @default(now())
  updatedAt DateTime           @updatedAt
}

model Product {
  id          String             @id @default(uuid())
  name        String             @db.VarChar(150)
  description String             @db.VarChar(255)
  image       String?            @db.VarChar(190)
  petshopId   String             @db.VarChar(50)
  categories  Category_Product[]
  variations  Variation[]
  petshop     Petshop            @relation(fields: [petshopId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  createdAt   DateTime           @default(now())
  updatedAt   DateTime           @updatedAt
}

model Category_Product {
  id         String   @id @default(uuid())
  productId  String   @db.VarChar(50)
  categoryId String   @db.VarChar(50)
  product    Product  @relation(fields: [productId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  category   Category @relation(fields: [categoryId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt
}

model Attribute {
  id         String                @id @default(uuid())
  name       String                @db.VarChar(50)
  petshopId  String                @db.VarChar(50)
  items      Attribute_Item[]
  variations Variation_Attribute[]
  petshop    Petshop               @relation(fields: [petshopId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  createdAt  DateTime              @default(now())
  updatedAt  DateTime              @updatedAt
}

model Variation {
  id         String                @id @default(uuid())
  amount     Decimal               @db.Decimal(10, 2)
  coust      Decimal?              @db.Decimal(10, 2)
  stock      Decimal?
  sku        String?               @db.VarChar(80)
  codebar    String                @db.VarChar(50)
  productId  String                @db.VarChar(50)
  product    Product               @relation(fields: [productId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  images     Variation_Image[]
  variations Variation_Attribute[]
  createdAt  DateTime              @default(now())
  updatedAt  DateTime              @updatedAt
}

model Attribute_Item {
  id          String                @id @default(uuid())
  name        String                @db.VarChar(50)
  attributeId String                @db.VarChar(50)
  attribute   Attribute             @relation(fields: [attributeId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  createdAt   DateTime              @default(now())
  updatedAt   DateTime              @updatedAt
  variations  Variation_Attribute[]
}

model Variation_Attribute {
  id          String         @id @default(uuid())
  variationId String
  itemId      String
  attributeId String
  variation   Variation      @relation(fields: [variationId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  attribute   Attribute      @relation(fields: [attributeId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  item        Attribute_Item @relation(fields: [itemId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  createdAt   DateTime       @default(now())
  updatedAt   DateTime       @updatedAt
}

model Variation_Image {
  id          String    @id @default(uuid())
  image       String?   @db.VarChar(190)
  variationId String    @db.VarChar(50)
  variation   Variation @relation(fields: [variationId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
}

model Address {
  id           String    @id @default(uuid())
  postcode     String    @db.VarChar(15)
  street       String    @db.VarChar(70)
  number       String    @db.VarChar(10)
  neighborhood String    @db.VarChar(50)
  city         String    @db.VarChar(50)
  state        String    @db.VarChar(15)
  complement   String?   @db.VarChar(80)
  observation  String?   @db.VarChar(100)
  customerId   String?   @db.VarChar(50)
  petshopId    String?   @db.VarChar(50)
  customer     Customer? @relation(fields: [customerId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  petshop      Petshop?  @relation(fields: [petshopId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  createdAt    DateTime  @default(now())
  updatedAt    DateTime  @updatedAt
}

model Pet {
  id          String     @id @default(uuid())
  name        String     @db.VarChar(100)
  observation String?    @db.VarChar(200)
  image       String?    @db.VarChar(190)
  customerId  String     @db.VarChar(50)
  petshopId   String     @db.VarChar(50)
  breedId     String?    @db.VarChar(50)
  specieId    String?    @db.VarChar(50)
  schedules   Schedule[]
  specie      Specie?    @relation(fields: [specieId], references: [id], onDelete: SetNull, onUpdate: Cascade)
  breed       Breed?     @relation(fields: [breedId], references: [id], onDelete: SetNull, onUpdate: Cascade)
  customer    Customer   @relation(fields: [customerId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  petshop     Petshop    @relation(fields: [petshopId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  createdAt   DateTime   @default(now())
  updatedAt   DateTime   @updatedAt
}

model Breed {
  id        String   @id @default(uuid())
  name      String   @db.VarChar(50)
  petshopId String   @db.VarChar(50)
  pets      Pet[]
  petshop   Petshop  @relation(fields: [petshopId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Specie {
  id        String   @id @default(uuid())
  name      String   @db.VarChar(50)
  petshopId String   @db.VarChar(50)
  pets      Pet[]
  petshop   Petshop  @relation(fields: [petshopId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Schedule {
  id         String    @id @default(uuid())
  day        DateTime
  startHour  DateTime
  finishHour DateTime
  petId      String
  employeeId String?
  petshopId  String
  petshop    Petshop   @relation(fields: [petshopId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  pet        Pet       @relation(fields: [petId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  employee   Employee? @relation(fields: [employeeId], references: [id], onDelete: SetNull, onUpdate: Cascade)
  createdAt  DateTime  @default(now())
  updatedAt  DateTime  @updatedAt
}

enum Role {
  LEVEL_1
  LEVEL_2
}
